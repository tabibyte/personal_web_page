/* BASE */ 

:root {
    --color-black: #000000;
    --color-white: #dfdfdf;
}

body {
    margin: 0;  
    padding: 0.5rem;
    box-sizing: border-box;
    
}

html {
    margin: 0;  
    padding: 0.5rem;
    box-sizing: border-box;
    height: 100%; 
}

* {
    font-family: 'JetBrains Mono', monospace;
    vertical-align: baseline;
}

body {
    min-height: 100%;
    display: flex;
    flex-direction: column;
}

::selection {
    color: var(--color-white);
    background: var(--color-black);
  }

p {
    margin-block-start: 0;
    margin-block-end: 0;
}

/* COLORS */

body {
    background-color: var(--color-white);
    color: var(--color-black);
    transition: background-color 0.3s ease, color 0.3s ease;
}

body.dark-theme {
    --color-black: #dfdfdf;
    --color-white: #000000;
}


/*_________________________________________________________________________*/


/* NAV ITEMS */

nav {
    padding: 1rem;
    padding-top: 0rem;
}

ul {
    padding-inline-start: 0px;
}

nav ul {
    list-style-type: none;
    display: flex;
    justify-content: space-between;
    width: 100%
    
    
}

nav ul li {
    flex: 1;
    position: relative;
    padding-top: 10px;
    padding-bottom: 10px;
    margin-right: 1rem;
    overflow: hidden;
}

nav ul li:last-child {
    margin-right: 0;
}

/* NAV TEXT */
nav ul li a {

    text-decoration: none;
    font-weight: 800;
    font-size: 1.5rem;
    display: block;
    text-align: left;

}

.nav-icon {
    margin-right: 0.5rem;
}

/* NAV LINE */
nav ul li::before {
    content: '';
    position: absolute;
    top: 0;
    width: 100%;
    height: 1px;
    background-color: var(--color-black);
}

/* NAV ANIMATION */
nav ul li::before {
    content: '';
    position: absolute;
    top: 0; /* Aligns the line at the top */
    left: 0; /* Start at the left edge */

    background-color: var(--color-black); /* Color of the line */
    transition: background-color 0.5s ease; /* Smooth transition for the line */
    z-index: 1; /* Set a lower z-index */
}

nav ul li a {
    text-decoration: none;
    display: block;
    text-align: left;
    padding-left: 1rem;
    color: var(--color-black); /* Default text color */
    position: relative; /* Required for stacking context */
    z-index: 2; /* Set a higher z-index to keep text above the fill */
}

nav ul li::after {
    content: '';
    position: absolute;
    top: 0; /* Aligns at the top */
    left: 0; /* Start at the left edge */
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    background-color: var(--color-black); /* Color of the fill */
    transform: translateY(-100%); /* Initially positioned above the li */
    transition: transform 0.5s ease; /* Smooth transition for the fill */
    z-index: 1; /* Positioned below the text */
}

nav ul li:hover::after {
    transform: translateY(0); /* Move the fill down into view */
}

nav ul li:hover a {
    color: var(--color-white);
    transition: color 0.5s ease; /* Change text color to white on hover */
}

/* NAV MOBILE */

@media (max-width: 768px) {  /* Adjust this value based on when you want the layout to change */
    nav ul {
        display: block; /* Stack items vertically */
        text-align: center; /* Center items in the column layout */
    }

    nav ul li {
        margin-bottom: 1rem; /* Add space between items vertically */
        
    }

    nav ul li:last-child {
        margin-right: 1rem;
    }

    nav ul li:last-child {
        margin-bottom: 0; /* Remove margin from the last item */
    }
}

/* NAV SELECTED */

nav ul li.selected::after {
    transform: translateY(0); /* Keep the background fill in view */
}

nav ul li.selected a {
    color: var(--color-white); /* Keep the text color white */
}

nav ul li:hover a,
nav ul li.selected:hover a {
    color: var(--color-white); /* Ensure the color doesn't change when hovered */
}


/*_________________________________________________________________________*/


/* MAIN */

main {
    flex: 1;
}

section {
    padding: 1rem;
}
  
/* FOOTER */

footer {
    padding: 1rem;
    padding-bottom  : 0rem;
    margin-top: auto;
}

.footer-content {
    display: flex;
    justify-content: space-between;
    
}

.footer-left {
    text-align: left;
    align-items: center;
    user-select: none;    
}

.footer-right {
    text-align: right;
    margin-top: auto;
}

/* FOOTER NAME */

#text {
    font-size: 1.1rem; /* Adjust the size */
    font-weight: 100; /* Makes the text bold */
    margin-bottom: -24px ;

}

#name {
    font-size: 8rem; /* Adjust the size */
    font-weight: 800; /* Makes the text bold */
    margin-bottom: -16px ;
    margin-left: -4px ;
}

/* FOOTER THEME-TOGGLE */

/* Theme Toggle Styles */
.theme-toggle {
    display: flex;
    justify-content: center;
    margin: 1rem 0;
    font-size: 1.2rem;
    font-weight: 700;
}

.toggle-item {
    flex: 1;
    padding: 1rem;
    text-align: center;
    cursor: pointer;
    transition: background-color 0.3s ease, color 0.3s ease;
    position: relative;
     /* Border for each button */
}

.toggle-item.selected {
    background-color: var(--color-black); /* Highlight background for selected theme */
    color: var(--color-white); /* Change text color to white */
}

/* Hover effect when not selected */
.toggle-item:not(.selected):hover {
    background-color: var(--color-white);
    color: var(--color-black);
}

.toggle-item#dark-theme:not(.selected):hover {
    background-color: var(--color-black);
    color: var(--color-white);
}

/* Ensure the selected button has no border */
.toggle-item.selected {
    border: none;
}

/* Theme change for dark mode (toggle items) */
body.dark-theme .toggle-item#dark-theme.selected {
    background-color: var(--color-black); /* White background for dark theme button */
    color: var(--color-white); /* Black text for the dark theme button */
}

body.dark-theme .toggle-item#light-theme {
    background-color: var(--color-white); /* Keep the light theme button black */
    color: var(--color-black); /* White text for the light theme button */
}

/* Theme change for dark mode (hover effect) */
body.dark-theme .toggle-item:not(.selected):hover {
    background-color: var(--color-black); /* Change hover color for dark theme */
    color: var(--color-white);
}

.toggle-item#light-theme:not(.selected):hover {
    background-color: var(--color-white); /* Change hover color for dark theme */
    color: var(--color-black);
}

body.dark-theme .toggle-item#light-theme:not(.selected):hover {
    background-color: var(--color-white); /* Hover color remains white for light theme button */
    color: var(--color-black); /* Text remains black on hover */
}

body.dark-theme .toggle-item#light-theme:not(.selected):hover {
    background-color: var(--color-black); /* Keep the light theme button black */
    color: var(--color-white); /* White text for the light theme button */
}